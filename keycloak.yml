version: '3.8'

x-keycloak-labels: &keycloak-labels
  labels:
    - traefik.enable=true
    - traefik.docker.network=keycloak
    - traefik.http.routers.keycloak-http.rule=Host(`keycloak.${DOMAIN?Variable DOMAIN not set}`)
    - traefik.http.routers.keycloak-http.entrypoints=http
    - traefik.http.routers.keycloak-http.service=keycloak
    - traefik.http.routers.keycloak-http.middlewares=https-redirect
    - traefik.http.routers.keycloak-https.rule=Host(`keycloak.${DOMAIN?Variable DOMAIN not set}`)
    - traefik.http.routers.keycloak-https.entrypoints=https
    - traefik.http.routers.keycloak-https.tls=true
    - traefik.http.routers.keycloak-https.service=keycloak
    - traefik.http.routers.keycloak-https.tls.certresolver=le
    - traefik.http.services.keycloak.loadbalancer.server.port=8080

x-service: &service
  logging:
    driver: json-file
    options:
      max-size: "100m"
      max-file: "2"
  restart: always
  networks:
    - keycloak
    - database

services:
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:legacy
    deploy:
      mode: replicated
      replicas: 1
      resources:
        reservations:
          cpus: '0.05'
          memory: 100M
      <<: *keycloak-labels
    <<: *keycloak-labels
    <<: *service  
    environment: 
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: ${KEYCLOAK_SQL_PASSWORD?Variable KEYCLOAK_SQL_PASSWORD not set}
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD?Variable KEYCLOAK_PASSWORD not set}

x-volume: &volume
  driver: local
x-volume-driver-opts: &volume-driver-opts
  type: none
  o: bind

networks:
  keycloak:
    name: keycloak
    external: true
  database:
    name: database
    external: true
