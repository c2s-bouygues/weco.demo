version: '3.8'

x-prometheus-labels: &prometheus-labels
  labels:
    - traefik.enable=true
    - traefik.docker.network=monitoring
    - traefik.http.routers.prometheus-http.rule=Host(`prometheus.${DOMAIN?Variable not set}`)
    - traefik.http.routers.prometheus-http.entrypoints=http
    #- traefik.http.routers.prometheus-http.middlewares=admin-auth
    - traefik.http.routers.prometheus-http.service=prometheus
    - traefik.http.routers.prometheus-http.middlewares=https-redirect
    - traefik.http.routers.prometheus-https.rule=Host(`prometheus.${DOMAIN?Variable not set}`)
    - traefik.http.routers.prometheus-https.entrypoints=https
    - traefik.http.routers.prometheus-https.middlewares=admin-auth
    - traefik.http.routers.prometheus-https.tls=true
    - traefik.http.routers.prometheus-https.service=prometheus
    - traefik.http.routers.prometheus-https.tls.certresolver=le
    - traefik.http.services.prometheus.loadbalancer.server.port=9090

x-alertmanager-labels: &alertmanager-labels
  labels:
    - traefik.enable=true
    - traefik.docker.network=monitoring
    - traefik.http.routers.alertmanager-http.rule=Host(`alertmanager.${DOMAIN?Variable not set}`)
    - traefik.http.routers.alertmanager-http.entrypoints=http
    #- traefik.http.routers.alertmanager-http.middlewares=admin-auth
    - traefik.http.routers.alertmanager-http.service=alertmanager
    - traefik.http.routers.alertmanager-http.middlewares=https-redirect
    - traefik.http.routers.alertmanager-https.rule=Host(`alertmanager.${DOMAIN?Variable not set}`)
    - traefik.http.routers.alertmanager-https.entrypoints=https
    - traefik.http.routers.alertmanager-https.middlewares=admin-auth
    - traefik.http.routers.alertmanager-https.tls=true
    - traefik.http.routers.alertmanager-https.service=alertmanager
    - traefik.http.routers.alertmanager-https.tls.certresolver=le
    - traefik.http.services.alertmanager.loadbalancer.server.port=9093

x-loki-labels: &loki-labels
  labels:
    - traefik.enable=true
    - traefik.docker.network=monitoring
    - traefik.http.routers.loki-http.rule=Host(`loki.${DOMAIN?Variable not set}`)
    - traefik.http.routers.loki-http.entrypoints=http
    #- traefik.http.routers.loki-http.middlewares=admin-auth
    - traefik.http.routers.loki-http.service=loki
    - traefik.http.routers.loki-http.middlewares=https-redirect
    - traefik.http.routers.loki-https.rule=Host(`loki.${DOMAIN?Variable not set}`)
    - traefik.http.routers.loki-https.entrypoints=https
    - traefik.http.routers.loki-https.middlewares=admin-auth
    - traefik.http.routers.loki-https.tls=true
    - traefik.http.routers.loki-https.service=loki
    - traefik.http.routers.loki-https.tls.certresolver=le
    - traefik.http.services.loki.loadbalancer.server.port=3100
    
x-promtail-labels: &promtail-labels
  labels:
    - traefik.enable=true
    - traefik.docker.network=monitoring
    - traefik.http.routers.promtail-http.rule=Host(`promtail.${DOMAIN?Variable not set}`)
    - traefik.http.routers.promtail-http.entrypoints=http
    #- traefik.http.routers.promtail-http.middlewares=admin-auth
    - traefik.http.routers.promtail-http.service=promtail
    - traefik.http.routers.promtail-http.middlewares=https-redirect
    - traefik.http.routers.promtail-https.rule=Host(`promtail.${DOMAIN?Variable not set}`)
    - traefik.http.routers.promtail-https.entrypoints=https
    - traefik.http.routers.promtail-https.middlewares=admin-auth
    - traefik.http.routers.promtail-https.tls=true
    - traefik.http.routers.promtail-https.service=promtail
    - traefik.http.routers.promtail-https.tls.certresolver=le
    - traefik.http.services.promtail.loadbalancer.server.port=9080

x-grafana-labels: &grafana-labels
  labels:
    - traefik.enable=true
    - traefik.docker.network=monitoring
    - traefik.http.routers.grafana-http.rule=Host(`grafana.${DOMAIN?Variable not set}`)
    - traefik.http.routers.grafana-http.entrypoints=http
    #- traefik.http.routers.grafana-http.middlewares=admin-auth
    - traefik.http.routers.grafana-http.service=grafana
    - traefik.http.routers.grafana-http.middlewares=https-redirect
    - traefik.http.routers.grafana-https.rule=Host(`grafana.${DOMAIN?Variable not set}`)
    - traefik.http.routers.grafana-https.entrypoints=https
    #- traefik.http.routers.grafana-https.middlewares=admin-auth
    - traefik.http.routers.grafana-https.tls=true
    - traefik.http.routers.grafana-https.service=grafana
    - traefik.http.routers.grafana-https.tls.certresolver=le
    - traefik.http.services.grafana.loadbalancer.server.port=3000

x-service: &service
  logging:
    driver: json-file
    options:
      max-size: "100m"
      max-file: "2"
  restart: always
  networks:
    - monitoring

services:
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    deploy:
      mode: replicated
      replicas: 1
      resources:
        reservations:
          cpus: '0.01'
          memory: 50M
      <<: *prometheus-labels
    <<: *prometheus-labels
    <<: *service
    volumes:
      - prometheus-provisioning:/etc/prometheus/
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      
  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager
    deploy:
      mode: replicated
      replicas: 1
      resources:
        reservations:
          cpus: '0.01'
          memory: 50M
      <<: *alertmanager-labels
    <<: *alertmanager-labels
    <<: *service
    volumes:
      - alertmanager-provisioning:/etc/alertmanager/
      - alertmanager-data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  loki:
    container_name: loki
    image: grafana/loki:latest
    deploy:
      mode: replicated
      replicas: 1
      resources:
        reservations:
          cpus: '0.01'
          memory: 50M
      <<: *loki-labels
    <<: *loki-labels
    <<: *service
    volumes:
      - loki-provisioning:/etc/loki/
    command: -config.file=/etc/loki/config.yml

  promtail:
    container_name: promtail
    image: grafana/promtail
    deploy:
      mode: replicated
      replicas: 1
      resources:
        reservations:
          cpus: '0.01'
          memory: 50M
      <<: *promtail-labels
    <<: *promtail-labels
    <<: *service
    volumes:
      - promtail-provisioning:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml


  # https://hub.docker.com/r/grafana/grafana
  grafana:
    container_name: grafana
    image: grafana/grafana
    deploy:
      mode: replicated
      replicas: 1
      resources:
        reservations:
          cpus: '0.01'
          memory: 50M
      <<: *grafana-labels
    <<: *grafana-labels
    <<: *service
    volumes:
      - grafana-provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    environment:
      GF_INSTALL_PLUGINS: grafana-clock-panel
      GF_SECURITY_ADMIN_PASSWORD: ${PASSWORD?Variable PASSWORD not set}
      GF_SECURITY_ADMIN_USER: ${USERNAME?Variable USERNAME not set}
      GF_SECURITY_SECRET_KEY: ${HASHED_PASSWORD?Variable HASHED_PASSWORD not set}
      GF_SERVER_ROOT_URL: https://grafana.${DOMAIN?Variable not set}
      GF_SERVER_ENABLE_GZIP: "true"
      GF_SECURITY_COOKIE_SECURE: "true"
      GF_SNAPSHOTS_EXTERNAL_ENABLED: "false"
      GF_USERS_ALLOW_SIGN_UP: "false"
    user: root


x-volume: &volume
  driver: local
x-volume-driver-opts: &volume-driver-opts
  type: none
  o: bind

volumes:
  prometheus-data:
    name: prometheus-data
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: ${DATAPATH?Variable DATAPATH not set}/prometheus/data
  prometheus-provisioning:
    name: prometheus-provisioning
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: ${DATAPATH?Variable DATAPATH not set}/prometheus/provisioning
  alertmanager-data:
    name: alertmanager-data
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: ${DATAPATH?Variable DATAPATH not set}/alertmanager/data
  alertmanager-provisioning:
    name: alertmanager-provisioning
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: ${DATAPATH?Variable DATAPATH not set}/alertmanager/provisioning
  promtail-provisioning:
    name: promtail-provisioning
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: ${DATAPATH?Variable DATAPATH not set}/promtail/provisioning
  loki-provisioning:
    name: loki-provisioning
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: ${DATAPATH?Variable DATAPATH not set}/loki/provisioning
  grafana-data:
    name: grafana-data
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: ${DATAPATH?Variable DATAPATH not set}/grafana/data
  grafana-provisioning:
    name: grafana-provisioning
    <<: *volume
    driver_opts:
      <<: *volume-driver-opts
      device: ${DATAPATH?Variable DATAPATH not set}/grafana/provisioning

x-network: &network
  external: true

networks:
  monitoring:
    name: monitoring
    <<: *network